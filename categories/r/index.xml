<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>R on Ten thousand words...</title><link>https://mespe.github.io/categories/r/</link><description>Recent content in R on Ten thousand words...</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Sun, 26 Jul 2020 11:38:38 -0600</lastBuildDate><atom:link href="https://mespe.github.io/categories/r/index.xml" rel="self" type="application/rss+xml"/><item><title>Untidy Tuedsay: Cocktails</title><link>https://mespe.github.io/post/untidy_cocktails/</link><pubDate>Sun, 26 Jul 2020 11:38:38 -0600</pubDate><guid>https://mespe.github.io/post/untidy_cocktails/</guid><description>So, one of the Tidy Tuesday challenges was brought to my attention recently due to a video of Hadley Wickam taking a swing at it.
In the video, Hadley does what he calls a hacky fix to tackle the data having fractions in the measure column, e.g.
1 1/2 oz Hadley does what many people appear to have done, which is to replace the fraction with the equivalent decimal using string replacement,</description></item><item><title>How I write an R function</title><link>https://mespe.github.io/post/write_a_fun/</link><pubDate>Fri, 22 May 2020 11:07:58 -0600</pubDate><guid>https://mespe.github.io/post/write_a_fun/</guid><description>One of the things that I was fortunate to learn relatively early in my R career was how to write a function. Functions allow you to avoid duplicating code, and facilitate better readability, maintenance, and testing of your code.
Over the years, how I write functions has changed. Due to an out-sized influence of one DTL, I now write my functions in a somewhat atypical style, which I thought might be worth showing.</description></item><item><title>Extract a number from a string with base R</title><link>https://mespe.github.io/post/num_extract/</link><pubDate>Wed, 20 May 2020 07:31:15 -0600</pubDate><guid>https://mespe.github.io/post/num_extract/</guid><description>This problem came across my desk yesterday, and I thought it was interesting and straightforward.
The problem is extracting a &amp;ldquo;group&amp;rdquo; number from the middle of a string. The strings looked like:
strings = c(&amp;#34;Group_1.Pooled&amp;#34;, &amp;#34;Group_1.Sample_1&amp;#34;, &amp;#34;Group_1.Sample_2&amp;#34;, &amp;#34;Group_1.Sample_3&amp;#34;, &amp;#34;Group_2.Pooled&amp;#34;, &amp;#34;Group_2.Sample_1&amp;#34;, &amp;#34;Group_2.Sample_2&amp;#34;, &amp;#34;Group_2.Sample_3&amp;#34;, &amp;#34;Group_3.Pooled&amp;#34;, &amp;#34;Group_3.Sample_1&amp;#34;, &amp;#34;Group_3.Sample_2&amp;#34;, &amp;#34;Group_3.Sample_3&amp;#34;, &amp;#34;Group_4.Pooled&amp;#34;, &amp;#34;Group_4.Sample_1&amp;#34;, &amp;#34;Group_4.Sample_2&amp;#34;, &amp;#34;Group_4.Sample_3&amp;#34;, &amp;#34;Group_5.Pooled&amp;#34;, &amp;#34;Group_5.Sample_1&amp;#34;, &amp;#34;Group_5.Sample_2&amp;#34;, &amp;#34;Group_5.Sample_3&amp;#34; ) So, what is the &amp;ldquo;base R&amp;rdquo; way to do this? Turns out there are many&amp;hellip;</description></item><item><title>Doing things the 'hard' way</title><link>https://mespe.github.io/post/doing/</link><pubDate>Fri, 15 May 2020 12:18:07 -0600</pubDate><guid>https://mespe.github.io/post/doing/</guid><description>Wow - long time since I&amp;rsquo;ve written anything. Mostly because, with the world ending and all, I did not feel like anything I had to say was fully formed yet. Everything needed a little time to simmer.
I&amp;rsquo;ve also grown disatistfied with all the hot-takes flying around. So I decided to just shut up for a while (not that I have been a particularly prolific blogger in the before times).</description></item><item><title>Xmas Functions, revisited</title><link>https://mespe.github.io/post/xmas_revisited/</link><pubDate>Sun, 22 Dec 2019 09:47:01 -0700</pubDate><guid>https://mespe.github.io/post/xmas_revisited/</guid><description>Years ago, a friend asked me for help writing a function to do her family&amp;rsquo;s Xmas gift exchange. You can see her post on a collection of functions for this here. The basic goal here is to have a function that randomizes the names in the hat, but with the restriction that close family members (spouses) cannot draw eachother. We want to simulate the process of pulling names out of a hat where you cannot draw yourself or your partner.</description></item><item><title>Future of R (per Hadley)</title><link>https://mespe.github.io/post/future_of_r/</link><pubDate>Mon, 19 Aug 2019 10:03:30 -0600</pubDate><guid>https://mespe.github.io/post/future_of_r/</guid><description>Quartz had a pretty interesting interview with Hadley Wickham on the Future of R. While the interview was pretty short, it has many interesting tidbits about how Hadley thinks about R.
The problem with the future of R according to the tidyverse and RStudio Many of the tidyverse developers are employed by RStudio, a commercial company. It is, in many ways, strange to be asking an employee of a commercial company about the future of an open source software.</description></item><item><title>Quick tidyverse thoughts</title><link>https://mespe.github.io/post/quick_tidy_thoughts/</link><pubDate>Wed, 24 Jul 2019 15:38:18 -0600</pubDate><guid>https://mespe.github.io/post/quick_tidy_thoughts/</guid><description>There has been a lot of chatter about R and the tidyverse as of late - some of it prompted by Norm Matloff&amp;rsquo;s posts here and here.
Below you will find some quick thoughts on the topic. These are half-baked at best, and probably not fit for general consumption. This is mostly a way for me to get my thoughts down on the page.
The tidyverse has increased the approachability and accessibility of R to a large audience.</description></item><item><title>Why workshops are tough to teach</title><link>https://mespe.github.io/post/workshops/</link><pubDate>Tue, 19 Mar 2019 09:39:47 -0600</pubDate><guid>https://mespe.github.io/post/workshops/</guid><description>A couple of weeks ago, I taught a one-hour workshop on the basics of writing functions in R. Overall, it went as well as I would expect an hour introduction workshop to go, which is to say OK but not great. Why not great? It turns out teaching skills in workshops is really difficult. But why?
I think it boils down to a couple of aspects of workshops:
Workshops:
are too short teach to the lowest skill level in the room don&amp;rsquo;t reflect how you actually learn these skill 1.</description></item><item><title>Good practices for working in R</title><link>https://mespe.github.io/post/r_best_practice/</link><pubDate>Mon, 04 Feb 2019 16:16:50 -0600</pubDate><guid>https://mespe.github.io/post/r_best_practice/</guid><description>These are the slides from my presentation at the Colorado State University R Users Group on 4 Feb 2019
Good practices for working in R Guidelines, not rules Try to understand why you do each recommendation Know that you can break the rules Good, not best Best can be difficult to nail down Best depends on situation Obsession with &amp;ldquo;best&amp;rdquo; can interfere with the good Should you listen to me?</description></item><item><title>Consulting</title><link>https://mespe.github.io/consulting/</link><pubDate>Tue, 04 Sep 2018 16:43:02 -0600</pubDate><guid>https://mespe.github.io/consulting/</guid><description>Need help with something?
I currently consult on:
R
creating packages
data munging
profiling and optimizing code
Statistics
Bayesian analyses
Animal movement models: CSS, HMM, latent-state
Data Science</description></item><item><title>Retrospective Power Analysis</title><link>https://mespe.github.io/post/power/</link><pubDate>Wed, 27 Jun 2018 16:16:50 -0600</pubDate><guid>https://mespe.github.io/post/power/</guid><description>&amp;hellip;Or, can we trust these estimates? One of the most common questions that comes up in scientific publications is &amp;ldquo;Can I trust these conclusions?&amp;rdquo; Statistics is supposed to help us decide the weight of evidence for or against a certain conclusion, but there have been issues. We are realizing that the standard paradim is not holding up, and there are many more false positives in the literature than the p &amp;lt; 0.</description></item><item><title>Dynamic documents (part 2)</title><link>https://mespe.github.io/post/dyn_docs-pt2/</link><pubDate>Thu, 19 Apr 2018 11:47:40 -0600</pubDate><guid>https://mespe.github.io/post/dyn_docs-pt2/</guid><description>Wow - long delay on this one. There are good reasons, which will be explained in coming posts. Stay tuned.
A brief intro to dynamic documents in R (cont.) Last time I outlined why you might want to use a dynamic document, and some of the popular formates that are commonly used. There are many great resources for the syntax used to actually create dynamic documents (e.g., for Rmarkdown: Rstudio, R-bloggers, etc.</description></item><item><title>Dynamic Docs in R (part 1)</title><link>https://mespe.github.io/post/dyn_docs-pt1/</link><pubDate>Mon, 05 Mar 2018 11:14:04 -0700</pubDate><guid>https://mespe.github.io/post/dyn_docs-pt1/</guid><description>A brief intro to dynamic documents in R I was asked to give a short overview of dynamic documents in R during Dr. Cini Brown&amp;rsquo;s lab meeting at Colorado State University last week, and I thought I would post some of the material here as well.
What is a dynamic document? Dynamic documents, or living documents, are documents which can be continuously updated, and are often self-contained. This means that the document itself contains the framework to generate and update its content.</description></item></channel></rss>